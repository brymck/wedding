#!/usr/bin/env ruby
require "fileutils"

THIS_DIR = File.expand_path(File.dirname(__FILE__))
STATIC_DIRNAME = "static"
OUTPUT_DIRNAME = "dist"
output_dir = File.join(THIS_DIR, OUTPUT_DIRNAME)
partials_dir = File.join(output_dir, "partials")
FileUtils.mkdir_p partials_dir

files = Dir.glob(File.join(THIS_DIR, "*.html"))

# Remove header and footer partials
files.delete_if { |f| File.basename(f).start_with?("_") }

def read_partial(name)
  path = File.join(THIS_DIR, "_#{name}.html")
  File.read path
end

def static_to_output_path(path)
  dirs = path.split("/")
  last_match = dirs.rindex(STATIC_DIRNAME)
  return path if last_match.nil?

  dirs[last_match] = OUTPUT_DIRNAME
  dirs.join "/"
end

header = read_partial("header")
footer = read_partial("footer")

puts "Writing..."
files.each do |input|
  basename = File.basename(input, ".html")
  basename_ext = "#{basename}.php"

  linked_header = header.sub(/a href\="#{basename == "index" ? "\." : basename}"/) do |s|
    s + ' class="current"'
  end
  input_text = File.read(input)
  title = basename == "index" ? "Maiko &amp; Bryan" : input_text[/(?<=\<h1\>).*(?=\<\/h1\>)/]
  linked_header.sub! /\<title\>(.*)\<\/title\>/, "<title>#{title}</title>"

  puts "  #{basename}"
  File.open(File.join(output_dir, basename_ext), "w") do |output|
    output.puts linked_header
    output.puts input_text
    output.puts footer
  end

  FileUtils.cp input, File.join(partials_dir, basename_ext)
end

puts "Moving static assets..."
Dir.glob(File.join(THIS_DIR, "static", "**", "*" )).each do |file|
  output_path = static_to_output_path(file)

  if File.directory?(file)
    FileUtils.mkdir_p output_path
  else
    if !File.exists?(output_path) || File.mtime(file) > File.mtime(output_path)
      puts "  #{File.basename(file)}"
      FileUtils.cp file, output_path
    end
  end
end
